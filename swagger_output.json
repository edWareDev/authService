{
  "swagger": "2.0",
  "info": {
    "title": "API de eStreamPanel v2.0",
    "description": "eStreamPanel es un middleware de autorización para reproducción de transmisiones con Flussonic, además de gestionar planes, paquetes, suscriptores, entre muchas otras funciones.",
    "version": "2.0.0"
  },
  "host": "adminhyo.globaltv.lat",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Token de autorización usando el esquema Bearer. Ejemplo: 'Authorization: Bearer {token}'"
    }
  },
  "paths": {
    "/api/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "Obtiene una lista paginada de usuarios.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Crea un nuevo usuario.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuario creado correctamente."
          }
        }
      }
    },
    "/api/users/id/{Id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User By Id",
        "description": "Obtiene toda la información detallada de un usuario por ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado."
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Actualiza el usuario. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "Elimina el usuario con el Id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/subscribers/": {
      "get": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Get Subscribers",
        "description": "Obtiene una lista paginada de suscriptores.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Create Subscriber",
        "description": "Crea un nuevo suscriptor.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Suscriptor creado correctamente."
          }
        }
      }
    },
    "/api/subscribers/id/{Id}": {
      "get": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Get Subscriber by Id",
        "description": "Devuelve la información detallada del suscriptor con el Id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Suscriptor encontrado."
          },
          "404": {
            "description": "Suscriptor no encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Update Subscriber",
        "description": "Actualiza el suscriptor. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Delete Subscriber",
        "description": "Elimina el suscriptor con el Id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/plans/": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get plans",
        "description": "Obtiene una lista paginada de planes.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Plans"
        ],
        "summary": "Create Plan",
        "description": "Crea un nuevo plan.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Plan creado correctamente."
          }
        }
      }
    },
    "/api/plans/id/{Id}": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get plan by ID",
        "description": "Devuelve la información detallada del plan con el Id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Plan encontrado."
          },
          "404": {
            "description": "Plan no encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Plans"
        ],
        "summary": "Update Plan",
        "description": "Actualiza el plan. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Plans"
        ],
        "summary": "Delete Plan",
        "description": "Elimina el plan con el Id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/packages/": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "Get packages",
        "description": "Obtiene una lista paginada de paquetes.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Packages"
        ],
        "summary": "Create Package",
        "description": "Crea un nuevo paquete.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Paquete creado correctamente."
          }
        }
      }
    },
    "/api/packages/id/{Id}": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "Get package by Id",
        "description": "Devuelve la información detallada del recurso con el id ingresado",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Paquete encontrado."
          },
          "404": {
            "description": "Paquete no encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Packages"
        ],
        "summary": "Update Package",
        "description": "Actualiza el paquete. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Packages"
        ],
        "summary": "Delete Package",
        "description": "Elimina el plan con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/peers/": {
      "get": {
        "tags": [
          "Peer"
        ],
        "summary": "Get peers",
        "description": "Obtiene una lista paginada de peers.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Peer"
        ],
        "summary": "Create Peer",
        "description": "Crea un nuevo peer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Peer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Peer creado correctamente."
          }
        }
      }
    },
    "/api/peers/id/{Id}": {
      "get": {
        "tags": [
          "Peer"
        ],
        "summary": "Get Peer By Id",
        "description": "Devuelve la información detallada del peer con el id ingresado",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Peer encontrado."
          },
          "404": {
            "description": "Peer no encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Peer"
        ],
        "summary": "Update Peer",
        "description": "Actualiza el peer. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Peer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Peer"
        ],
        "summary": "Delete Peer",
        "description": "Elimina el recurso por ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/streams/": {
      "get": {
        "tags": [
          "Streams"
        ],
        "summary": "Get streams",
        "description": "Obtiene una lista paginada de transmisiones.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Streams"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Create Stream",
        "description": "Crea una nueva transmisión.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transmisión creada correctamente."
          }
        }
      }
    },
    "/api/streams/id/{Id}": {
      "get": {
        "tags": [
          "Streams"
        ],
        "summary": "Get stream by Id",
        "description": "Devuelve la información detallada de la transmisión con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Transmisión encontrada."
          },
          "404": {
            "description": "Transmisión no encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "Streams"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Update Stream",
        "description": "Actualiza la transmisión. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Streams"
        ],
        "summary": "Delete Stream",
        "description": "Elimina la transmisión con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/external-apps/": {
      "get": {
        "tags": [
          "External Apps"
        ],
        "summary": "Get external apps",
        "description": "Obtiene una lista paginada de aplicaciónes externas.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "External Apps"
        ],
        "summary": "Create external app",
        "description": "Crea una nueva aplicación externa.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ExternalApp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Aplicación externa creada correctamente."
          }
        }
      }
    },
    "/api/external-apps/id/{Id}": {
      "get": {
        "tags": [
          "External Apps"
        ],
        "summary": "Get External App by Id",
        "description": "Devuelve la información detallada de la aplicación externa con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Aplicación externa encontrada."
          },
          "404": {
            "description": "Aplicación externa no encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "External Apps"
        ],
        "summary": "Update External App",
        "description": "Actualiza la aplicación externa. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ExternalApp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "External Apps"
        ],
        "summary": "Delete ExternalApp",
        "description": "Elimina la aplicación externa con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/api/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get categories",
        "description": "Obtiene una lista paginada de categorías.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error de autorización."
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create Category",
        "description": "Crea una nueva categoría.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Categoría creada correctamente."
          }
        }
      }
    },
    "/api/categories/id/{Id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by Id",
        "description": "Devuelve la información detallada de la categoría con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Categoría encontrada."
          },
          "404": {
            "description": "Categoría no encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "Categories"
        ],
        "summary": "Update Category",
        "description": "Actualiza la categoría. Todos los campos son opcionales y se actualizarán solo si son enviados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualización exitosa."
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete Category",
        "description": "Elimina la categoría con el id ingresado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Eliminación exitosa."
          }
        }
      }
    },
    "/auth/{user}/{password}": {
      "get": {
        "tags": [
          "Auth - Subscriber Info"
        ],
        "summary": "Get subscriber info",
        "description": "Obtiene la información básica del suscriptor.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error en la consulta."
          }
        }
      }
    },
    "/auth/{user}/{password}/categories": {
      "get": {
        "tags": [
          "Auth - Subscriber Categories"
        ],
        "summary": "Get subscriber categories",
        "description": "Obtiene la lista de categorias disponibles.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error en la consulta."
          }
        }
      }
    },
    "/auth/{user}/{password}/playlist/{responseFormat}/{videoFormat}": {
      "get": {
        "tags": [
          "Auth - Subscriber Playlist"
        ],
        "summary": "Get subscriber playlist",
        "description": "Obtiene la lista de reproducción del suscriptor.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "responseFormat",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "json",
              "m3u8"
            ],
            "description": "Formato de respuesta permitido: 'json' o 'm3u8'"
          },
          {
            "name": "videoFormat",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "hls",
              "ts"
            ],
            "description": "Formato de video permitido: 'hls' o 'ts'"
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa."
          },
          "403": {
            "description": "Error en la consulta."
          }
        }
      }
    },
    "/auth/token-validate": {
      "get": {
        "tags": [
          "Auth - Player Approval"
        ],
        "summary": "Validación de reproducción de video",
        "description": "Este endpoint debe ser configurado como mecanismo de autorización en Flussonic. Se encarga de validar los parámetros enviados por el reproductor antes de permitir el acceso al contenido, asegurando que el token y la sesión sean válidos.",
        "responses": {
          "200": {
            "description": "Reproducción autorizada."
          },
          "403": {
            "description": "Acceso denegado. La solicitud no cumplió con las validaciones."
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Get Health",
        "description": "Este endpoint verifica el estado general del sistema, incluyendo la disponibilidad de la API, la base de datos y el servidor principal de Flussonic. Puede ser usado para monitoreo o para comprobar si los servicios críticos están funcionando correctamente.",
        "responses": {
          "200": {
            "description": "Todos los servicios están funcionando correctamente.",
            "schema": {
              "type": "object",
              "properties": {
                "API_STATUS": {
                  "type": "boolean",
                  "example": true
                },
                "DB_STATUS": {
                  "type": "boolean",
                  "example": true
                },
                "MAIN_FLUSSONIC_STATUS": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "503": {
            "description": "Uno o más servicios están inactivos."
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password",
        "role"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "default": true,
          "description": "Estado del usuario. Por defecto es true."
        }
      }
    },
    "Subscriber": {
      "type": "object",
      "required": [
        "fullName",
        "identifier",
        "password",
        "plan",
        "peer"
      ],
      "properties": {
        "fullName": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "peer": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "description": "Opcional"
        },
        "email": {
          "type": "string",
          "description": "Opcional"
        },
        "comment": {
          "type": "string",
          "description": "Comentario opcional del suscriptor."
        },
        "isActive": {
          "type": "boolean",
          "default": true,
          "description": "Por defecto es true."
        }
      }
    },
    "Plan": {
      "type": "object",
      "required": [
        "name",
        "packages"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "packages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isActive": {
          "type": "boolean",
          "default": true
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Package": {
      "type": "object",
      "required": [
        "name",
        "streams"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "streams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isActive": {
          "type": "boolean",
          "default": true
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Peer": {
      "type": "object",
      "required": [
        "name",
        "managementUrl",
        "outputLocalUrl",
        "user",
        "password"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "managementUrl": {
          "type": "string"
        },
        "outputLocalUrl": {
          "type": "string"
        },
        "outputPublicUrl": {
          "type": "string",
          "description": "Opcional"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "default": true
        }
      }
    },
    "Stream": {
      "type": "object",
      "required": [
        "name",
        "url",
        "position",
        "category"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "logo": {
          "type": "string",
          "format": "binary",
          "description": "Logo como imagen o URL. Opcional."
        },
        "isActive": {
          "type": "boolean",
          "default": true
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "ExternalApp": {
      "type": "object",
      "required": [
        "name",
        "role"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "default": true,
          "description": "Por defecto es true."
        }
      }
    },
    "Category": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "default": true
        },
        "comment": {
          "type": "string"
        }
      }
    }
  }
}